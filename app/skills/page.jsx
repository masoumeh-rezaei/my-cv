import Image from "next/image";
import nextjs from '../../public/Images/nextjs.svg'
import js from '../../public/Images/javascript-svgrepo-com.svg'
import react from '../../public/Images/react-svgrepo-com.svg'
const Skills = () => {
    const skillsData=[
        {
            id:1,
            name:'HTML and CSS',
            desc:'implement html and css to creating initial layout, considering responsive web design scenarios',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M3.23242 2.24032C3.23242 2.37383 3.57065 6.29016 3.98899 10.9453C4.39842 15.5915 4.75445 19.5345 4.76335 19.7036L4.79005 20.0062L8.39486 21.0031L11.9908 22L12.7117 21.8042C13.1034 21.6974 14.7144 21.2523 16.2987 20.8162C18.7553 20.1397 19.1737 19.9973 19.2093 19.846C19.2538 19.6324 20.7669 2.48064 20.7669 2.19582V2H3.23242V2.24032ZM17.5359 6.02314C17.5003 6.23676 17.2689 8.76457 17.0197 11.6573C16.7616 14.5412 16.548 16.9266 16.5302 16.9444C16.4945 16.9889 12.1243 18.1994 11.9997 18.1994C11.9107 18.1994 9.52526 17.5496 7.89642 17.0868L7.44248 16.9533L7.33567 15.7784C7.28227 15.1286 7.21106 14.3453 7.17546 14.0338L7.12205 13.482H8.23465C9.48965 13.482 9.45405 13.4642 9.46295 14.2385C9.46295 14.4344 9.48965 14.737 9.51636 14.915L9.56976 15.2354L10.7892 15.5559L11.9997 15.8763L13.2013 15.5559C13.8599 15.3778 14.4118 15.2265 14.4118 15.2265C14.4207 15.2176 14.4741 14.6925 14.5275 14.0605C14.5809 13.4197 14.6432 12.7966 14.6699 12.6542L14.7144 12.4139H7.07755L7.03304 12.2092C7.00634 12.1024 6.95294 11.5861 6.91734 11.0521L6.85503 10.0997H14.8746L14.928 9.49444C14.9636 9.16511 15.017 8.65777 15.0437 8.37294C15.0793 8.00801 15.0704 7.8656 14.9992 7.9101C14.9458 7.9368 13.05 7.9368 10.7714 7.9012L6.63251 7.8478L6.57911 7.21584C6.5435 6.86871 6.499 6.37027 6.4723 6.11215L6.41889 5.64931H17.5804L17.5359 6.02314Z" fill="#323544"/>
                </svg>
                ),
        },
        {
            id:2,
            name:'BootStrap',
            desc:'Utilizing each one of these frameworks to improve the efficiency of user interface styles.',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M14.7293 14.2355C14.7293 15.9484 13.1325 15.9194 12.9874 15.9194H9.70673V12.6387H12.9583C14.7003 12.5806 14.7293 13.8871 14.7293 14.2355ZM12.7261 11.2742C12.7551 11.2742 14.2648 11.3032 14.2648 9.79355C14.2648 9.18387 14.1487 8.37097 12.7261 8.37097H9.70673V11.2742H12.7261ZM20.9712 6.01935V18.0097C20.9712 19.6355 19.6358 21 17.9519 21H6.04866C4.36478 21 3.0293 19.6645 3.0293 17.9806V6.01935C3.0293 4.33548 4.36478 3 6.04866 3H18.039C19.6358 3 20.9712 4.33548 20.9712 6.01935ZM16.5583 14.4387C16.5583 13.5677 16.3261 12.1161 14.6132 11.7387V11.7097C15.5422 11.3032 16.0938 10.5774 16.0938 9.50323C16.0938 9.2129 16.1809 6.89032 12.9874 6.89032H7.90673V17.3419C13.0454 17.3419 13.539 17.371 14.468 17.1387C15.0196 16.9645 16.5583 16.4419 16.5583 14.4387Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:3,
            name:'jQuery',
            desc:'It is one of the oldest and most widely used JavaScript libraries.',
            icons:(<svg stroke="currentColor" fill="currentColor" strokeWidth="0" role="img" viewBox="0 0 24 24" className=" text-cyan-100" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><title></title><path d="M1.525 5.87c-2.126 3.054-1.862 7.026-.237 10.269.037.079.078.154.118.229.023.052.049.1.077.15.013.027.031.056.047.082.026.052.054.102.081.152l.157.266c.03.049.057.097.09.146.056.094.12.187.178.281.026.04.05.078.079.117a6.368 6.368 0 00.31.445c.078.107.156.211.24.315.027.038.058.076.086.115l.22.269c.028.03.055.067.084.099.098.118.202.233.306.35l.005.006a3.134 3.134 0 00.425.44c.08.083.16.165.245.245l.101.097c.111.105.223.209.34.309.002 0 .003.002.005.003l.057.05c.102.089.205.178.31.26l.125.105c.085.068.174.133.26.2l.137.105c.093.07.192.139.287.207.035.025.07.05.106.073l.03.023.28.185.12.08c.148.094.294.184.44.272.041.02.084.044.123.068.108.062.22.125.329.183.06.034.122.063.184.094.075.042.153.083.234.125a.324.324 0 01.056.023c.033.015.064.031.096.047.12.06.245.118.375.175.024.01.05.02.076.034.144.063.289.123.438.182.034.01.07.027.105.04.135.051.274.103.411.152l.05.018c.154.052.305.102.46.15.036.01.073.023.111.033.16.048.314.105.474.137 10.273 1.872 13.258-6.177 13.258-6.177-2.508 3.266-6.958 4.127-11.174 3.169-.156-.036-.312-.086-.47-.132a13.539 13.539 0 01-.567-.182l-.062-.024c-.136-.046-.267-.097-.4-.148a1.615 1.615 0 00-.11-.04c-.148-.06-.29-.121-.433-.184-.031-.01-.057-.024-.088-.036a23.44 23.44 0 01-.362-.17 1.485 1.485 0 01-.106-.052c-.094-.044-.188-.095-.28-.143a3.947 3.947 0 01-.187-.096c-.114-.06-.227-.125-.34-.187-.034-.024-.073-.044-.112-.066a15.922 15.922 0 01-.439-.27 2.107 2.107 0 01-.118-.078 6.01 6.01 0 01-.312-.207c-.035-.023-.067-.048-.103-.073a9.553 9.553 0 01-.295-.212c-.042-.034-.087-.066-.132-.1-.088-.07-.177-.135-.265-.208l-.118-.095a10.593 10.593 0 01-.335-.28.258.258 0 00-.037-.031l-.347-.316-.1-.094c-.082-.084-.166-.164-.25-.246l-.098-.1a9.081 9.081 0 01-.309-.323l-.015-.016c-.106-.116-.21-.235-.313-.355-.027-.03-.053-.064-.08-.097l-.227-.277a21.275 21.275 0 01-.34-.449C2.152 11.79 1.306 7.384 3.177 3.771m4.943-.473c-1.54 2.211-1.454 5.169-.254 7.508a9.111 9.111 0 00.678 1.133c.23.33.484.721.793.988.107.122.223.24.344.36l.09.09c.114.11.232.217.35.325l.016.013a9.867 9.867 0 00.414.342c.034.023.063.05.096.073.14.108.282.212.428.316l.015.009c.062.045.128.086.198.13.028.018.06.042.09.06.106.068.21.132.318.197.017.007.032.016.048.023.09.055.188.108.282.157.033.02.065.035.1.054.066.033.132.068.197.102l.032.014c.135.067.273.129.408.19.034.014.063.025.092.039.111.048.224.094.336.137.05.017.097.037.144.052.102.038.21.073.31.108l.14.045c.147.045.295.104.449.13C22.164 17.206 24 11.098 24 11.098c-1.653 2.38-4.852 3.513-8.261 2.628a8.04 8.04 0 01-.449-.13c-.048-.014-.09-.029-.136-.043-.104-.036-.211-.07-.312-.109l-.144-.054c-.113-.045-.227-.087-.336-.135-.034-.015-.065-.025-.091-.04-.14-.063-.281-.125-.418-.192l-.206-.107-.119-.06a5.673 5.673 0 01-.265-.15.62.62 0 01-.062-.035c-.106-.066-.217-.13-.318-.198-.034-.019-.065-.042-.097-.062l-.208-.136c-.144-.1-.285-.208-.428-.313-.032-.029-.063-.053-.094-.079-1.499-1.178-2.681-2.79-3.242-4.613-.59-1.897-.46-4.023.56-5.75m4.292-.147c-.909 1.334-.996 2.99-.37 4.46.665 1.563 2.024 2.79 3.608 3.37.065.025.128.046.196.07l.088.027c.092.03.185.063.28.084 4.381.845 5.567-2.25 5.886-2.704-1.043 1.498-2.792 1.857-4.938 1.335a4.85 4.85 0 01-.516-.16 6.352 6.352 0 01-.618-.254 6.53 6.53 0 01-1.082-.66c-1.922-1.457-3.113-4.236-1.859-6.5"></path></svg>),
        },
        {
            id:4,
            name:'React',
            desc:'Creating cross-platform mobile application using react-native (even for web) library, with reusable, maintainable and manageable Functional components.',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M18.3226 9.00661C18.0968 8.97436 17.9032 8.87758 17.6774 8.81306C17.7097 8.68403 17.7097 8.555 17.7742 8.36145C18.2258 6.03887 17.9032 4.20017 16.871 3.55501C15.8387 2.97437 14.1613 3.58727 12.4839 5.03887C12.3548 5.1679 12.129 5.29694 12 5.49048C11.9032 5.39371 11.7742 5.29694 11.6774 5.1679C9.90323 3.58727 8.16129 2.94211 7.06452 3.55501C6.03226 4.13566 5.70968 5.90984 6.16129 8.07113C6.19355 8.29694 6.25806 8.52274 6.29032 8.71629C6.06452 8.74855 5.80645 8.84532 5.58065 8.9421C3.48387 9.68403 2 10.8776 2 12.0066C2 13.2324 3.58065 14.4582 5.74194 15.1679C5.93548 15.2002 6.09677 15.2969 6.29032 15.2969C6.25806 15.5227 6.16129 15.7485 6.16129 16.0066C5.74194 18.1356 6.06452 19.8453 7.09677 20.426C8.12903 21.0711 9.93548 20.426 11.6129 18.8776C11.7419 18.7486 11.871 18.6518 12.0323 18.5227C12.1613 18.6518 12.3871 18.8453 12.5806 18.9744C14.1935 20.426 15.871 21.0066 16.9355 20.426C17.9677 19.7808 18.3226 17.9744 17.871 15.7163C17.8387 15.5873 17.8387 15.3615 17.7419 15.1679C17.871 15.1356 17.9677 15.1356 18.0968 15.0389C20.3548 14.3615 22 13.1356 22 11.9098C21.9677 10.9098 20.4194 9.74855 18.3226 9.00661ZM13.0323 5.71629C14.4839 4.45824 15.8387 4.00663 16.4839 4.32921C17.129 4.68405 17.3871 6.23242 16.9677 8.26468C16.9355 8.39371 16.9355 8.49048 16.871 8.68403C16 8.49048 15.1613 8.32919 14.2581 8.26468C13.7742 7.555 13.2258 6.81306 12.6452 6.23242C12.7742 5.97436 12.9032 5.84532 13.0323 5.71629ZM8.54839 14.0711C8.74194 14.426 8.96774 14.7486 9.19355 15.0711C8.54839 15.0389 7.96774 14.9421 7.3871 14.8131C7.51613 14.2647 7.74194 13.684 8.03226 13.1034C8.16129 13.3937 8.3871 13.7808 8.54839 14.0711ZM7.3871 9.42597C7.93548 9.29694 8.51613 9.20016 9.16129 9.10339C8.93548 9.42597 8.74194 9.74855 8.58064 10.1034C8.41935 10.4582 8.22581 10.7485 8.03226 11.1356C7.74194 10.5227 7.58065 9.97436 7.3871 9.42597ZM8.41935 12.1034C8.64516 11.555 8.96774 11.0711 9.29032 10.5227C9.6129 9.97436 9.93548 9.49048 10.2258 8.97436C10.8065 8.9421 11.3871 8.9421 12 8.9421C12.5806 8.9421 13.2258 8.97436 13.7742 8.97436C14.129 9.45823 14.4194 9.97436 14.7097 10.4582C15.0323 10.9421 15.2903 11.4905 15.5806 12.0389C15.3548 12.5873 15.0323 13.0711 14.7097 13.6195C14.3871 14.1679 14.0645 14.6518 13.7742 15.1679C13.1935 15.2002 12.6129 15.2002 11.9677 15.2002C11.3226 15.2002 10.7419 15.1679 10.1935 15.1679C9.83871 14.684 9.54839 14.1679 9.25806 13.6195C8.96774 13.0711 8.70968 12.6518 8.41935 12.1034ZM15.4516 14.0711C15.6452 13.7163 15.8065 13.3937 16 13.0389C16.2258 13.5873 16.4516 14.1679 16.6452 14.7486C16.0645 14.8776 15.4194 14.9744 14.7742 15.0711C15.0323 14.7486 15.2581 14.3937 15.4516 14.0711ZM16.0323 11.1034C15.8387 10.7485 15.6774 10.426 15.4839 10.0711C15.2903 9.71629 15.0645 9.42597 14.9032 9.13565C15.5484 9.23242 16.129 9.32919 16.6774 9.45823C16.4839 10.0066 16.2581 10.555 16.0323 11.1034ZM12 6.74855C12.4194 7.20016 12.7742 7.65177 13.129 8.13565C12.3548 8.10339 11.5806 8.10339 10.8065 8.13565C11.2258 7.61952 11.6452 7.1679 12 6.74855ZM7.48387 4.36146C8.12903 4.00663 9.6129 4.4905 11.0968 5.90984C11.1935 6.00661 11.2903 6.10339 11.4194 6.1679C10.8387 6.81306 10.2903 7.52274 9.74194 8.20016C8.87097 8.29694 7.96774 8.42597 7.12903 8.61952C7.09677 8.42597 7.03226 8.20016 7 8.03887C6.64516 6.13565 6.87097 4.7163 7.48387 4.36146ZM6.58064 14.6195C6.45161 14.5873 6.25806 14.5227 6.09677 14.4905C5.22581 14.2647 4.32258 13.8131 3.6129 13.2647C3.16129 12.9421 2.93548 12.555 2.83871 12.1034C2.83871 11.3937 4.09677 10.4905 5.87097 9.84532C6.09677 9.74855 6.32258 9.71629 6.54839 9.61952C6.80645 10.4905 7.12903 11.2969 7.48387 12.1034C7.16129 12.9098 6.80645 13.7163 6.58064 14.6195ZM11.0645 18.3937C10.4194 18.9744 9.67742 19.426 8.83871 19.7486C8.3871 19.9744 7.90323 19.9744 7.48387 19.7808C6.83871 19.426 6.6129 18.0711 6.93548 16.2002C6.96774 15.9744 7.03226 15.7486 7.06452 15.555C7.93548 15.7486 8.83871 15.8776 9.67742 15.9098C10.1613 16.6195 10.7742 17.3615 11.3548 18.0066C11.3226 18.2002 11.1935 18.2969 11.0645 18.3937ZM12.0323 17.4905C11.6129 17.0389 11.2581 16.5873 10.871 16.1034C11.2258 16.1034 11.5806 16.1356 12 16.1356C12.4194 16.1356 12.8065 16.1356 13.1613 16.1034C12.8065 16.5227 12.4516 16.9744 12.0323 17.4905ZM17.129 18.6195C17.0968 19.0711 16.871 19.555 16.4839 19.8453C15.8387 20.2002 14.5484 19.7485 13.129 18.4905C13 18.3615 12.8065 18.2324 12.6452 18.0389C13.2258 17.3937 13.7742 16.684 14.2581 15.9421C15.1613 15.9098 16.0323 15.7163 16.871 15.5227C16.9032 15.6518 16.9032 15.8453 16.9677 15.9744C17.1935 16.8776 17.1935 17.7808 17.129 18.6195ZM17.8387 14.4582C17.7419 14.4905 17.6129 14.4905 17.4839 14.555C17.2258 13.684 16.8387 12.8776 16.4839 12.0711C16.8387 11.2969 17.1613 10.4582 17.4194 9.61952C17.6452 9.65177 17.8387 9.74855 18 9.81306C19.8065 10.4582 21.0645 11.3615 21.0645 12.0711C21.0968 12.8131 19.7742 13.8131 17.8387 14.4582ZM12 13.8453C13 13.8453 13.7742 13.0389 13.7742 12.0711C13.7742 11.1034 12.9677 10.2969 12 10.2969C11.0645 10.2969 10.2258 11.1034 10.2258 12.0711C10.2258 13.0389 11 13.8453 12 13.8453Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:5,
            name:'React hooks and component lifecycle',
            desc:'Utilizing React Hooks with Functional component to get rid of redundancy and increasing the efficiency and clean code standards.Mostly used ones are useState, useEffect, and useContext',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18.3226 9.00661C18.0968 8.97436 17.9032 8.87758 17.6774 8.81306C17.7097 8.68403 17.7097 8.555 17.7742 8.36145C18.2258 6.03887 17.9032 4.20017 16.871 3.55501C15.8387 2.97437 14.1613 3.58727 12.4839 5.03887C12.3548 5.1679 12.129 5.29694 12 5.49048C11.9032 5.39371 11.7742 5.29694 11.6774 5.1679C9.90323 3.58727 8.16129 2.94211 7.06452 3.55501C6.03226 4.13566 5.70968 5.90984 6.16129 8.07113C6.19355 8.29694 6.25806 8.52274 6.29032 8.71629C6.06452 8.74855 5.80645 8.84532 5.58065 8.9421C3.48387 9.68403 2 10.8776 2 12.0066C2 13.2324 3.58065 14.4582 5.74194 15.1679C5.93548 15.2002 6.09677 15.2969 6.29032 15.2969C6.25806 15.5227 6.16129 15.7485 6.16129 16.0066C5.74194 18.1356 6.06452 19.8453 7.09677 20.426C8.12903 21.0711 9.93548 20.426 11.6129 18.8776C11.7419 18.7486 11.871 18.6518 12.0323 18.5227C12.1613 18.6518 12.3871 18.8453 12.5806 18.9744C14.1935 20.426 15.871 21.0066 16.9355 20.426C17.9677 19.7808 18.3226 17.9744 17.871 15.7163C17.8387 15.5873 17.8387 15.3615 17.7419 15.1679C17.871 15.1356 17.9677 15.1356 18.0968 15.0389C20.3548 14.3615 22 13.1356 22 11.9098C21.9677 10.9098 20.4194 9.74855 18.3226 9.00661ZM13.0323 5.71629C14.4839 4.45824 15.8387 4.00663 16.4839 4.32921C17.129 4.68405 17.3871 6.23242 16.9677 8.26468C16.9355 8.39371 16.9355 8.49048 16.871 8.68403C16 8.49048 15.1613 8.32919 14.2581 8.26468C13.7742 7.555 13.2258 6.81306 12.6452 6.23242C12.7742 5.97436 12.9032 5.84532 13.0323 5.71629ZM8.54839 14.0711C8.74194 14.426 8.96774 14.7486 9.19355 15.0711C8.54839 15.0389 7.96774 14.9421 7.3871 14.8131C7.51613 14.2647 7.74194 13.684 8.03226 13.1034C8.16129 13.3937 8.3871 13.7808 8.54839 14.0711ZM7.3871 9.42597C7.93548 9.29694 8.51613 9.20016 9.16129 9.10339C8.93548 9.42597 8.74194 9.74855 8.58064 10.1034C8.41935 10.4582 8.22581 10.7485 8.03226 11.1356C7.74194 10.5227 7.58065 9.97436 7.3871 9.42597ZM8.41935 12.1034C8.64516 11.555 8.96774 11.0711 9.29032 10.5227C9.6129 9.97436 9.93548 9.49048 10.2258 8.97436C10.8065 8.9421 11.3871 8.9421 12 8.9421C12.5806 8.9421 13.2258 8.97436 13.7742 8.97436C14.129 9.45823 14.4194 9.97436 14.7097 10.4582C15.0323 10.9421 15.2903 11.4905 15.5806 12.0389C15.3548 12.5873 15.0323 13.0711 14.7097 13.6195C14.3871 14.1679 14.0645 14.6518 13.7742 15.1679C13.1935 15.2002 12.6129 15.2002 11.9677 15.2002C11.3226 15.2002 10.7419 15.1679 10.1935 15.1679C9.83871 14.684 9.54839 14.1679 9.25806 13.6195C8.96774 13.0711 8.70968 12.6518 8.41935 12.1034ZM15.4516 14.0711C15.6452 13.7163 15.8065 13.3937 16 13.0389C16.2258 13.5873 16.4516 14.1679 16.6452 14.7486C16.0645 14.8776 15.4194 14.9744 14.7742 15.0711C15.0323 14.7486 15.2581 14.3937 15.4516 14.0711ZM16.0323 11.1034C15.8387 10.7485 15.6774 10.426 15.4839 10.0711C15.2903 9.71629 15.0645 9.42597 14.9032 9.13565C15.5484 9.23242 16.129 9.32919 16.6774 9.45823C16.4839 10.0066 16.2581 10.555 16.0323 11.1034ZM12 6.74855C12.4194 7.20016 12.7742 7.65177 13.129 8.13565C12.3548 8.10339 11.5806 8.10339 10.8065 8.13565C11.2258 7.61952 11.6452 7.1679 12 6.74855ZM7.48387 4.36146C8.12903 4.00663 9.6129 4.4905 11.0968 5.90984C11.1935 6.00661 11.2903 6.10339 11.4194 6.1679C10.8387 6.81306 10.2903 7.52274 9.74194 8.20016C8.87097 8.29694 7.96774 8.42597 7.12903 8.61952C7.09677 8.42597 7.03226 8.20016 7 8.03887C6.64516 6.13565 6.87097 4.7163 7.48387 4.36146ZM6.58064 14.6195C6.45161 14.5873 6.25806 14.5227 6.09677 14.4905C5.22581 14.2647 4.32258 13.8131 3.6129 13.2647C3.16129 12.9421 2.93548 12.555 2.83871 12.1034C2.83871 11.3937 4.09677 10.4905 5.87097 9.84532C6.09677 9.74855 6.32258 9.71629 6.54839 9.61952C6.80645 10.4905 7.12903 11.2969 7.48387 12.1034C7.16129 12.9098 6.80645 13.7163 6.58064 14.6195ZM11.0645 18.3937C10.4194 18.9744 9.67742 19.426 8.83871 19.7486C8.3871 19.9744 7.90323 19.9744 7.48387 19.7808C6.83871 19.426 6.6129 18.0711 6.93548 16.2002C6.96774 15.9744 7.03226 15.7486 7.06452 15.555C7.93548 15.7486 8.83871 15.8776 9.67742 15.9098C10.1613 16.6195 10.7742 17.3615 11.3548 18.0066C11.3226 18.2002 11.1935 18.2969 11.0645 18.3937ZM12.0323 17.4905C11.6129 17.0389 11.2581 16.5873 10.871 16.1034C11.2258 16.1034 11.5806 16.1356 12 16.1356C12.4194 16.1356 12.8065 16.1356 13.1613 16.1034C12.8065 16.5227 12.4516 16.9744 12.0323 17.4905ZM17.129 18.6195C17.0968 19.0711 16.871 19.555 16.4839 19.8453C15.8387 20.2002 14.5484 19.7485 13.129 18.4905C13 18.3615 12.8065 18.2324 12.6452 18.0389C13.2258 17.3937 13.7742 16.684 14.2581 15.9421C15.1613 15.9098 16.0323 15.7163 16.871 15.5227C16.9032 15.6518 16.9032 15.8453 16.9677 15.9744C17.1935 16.8776 17.1935 17.7808 17.129 18.6195ZM17.8387 14.4582C17.7419 14.4905 17.6129 14.4905 17.4839 14.555C17.2258 13.684 16.8387 12.8776 16.4839 12.0711C16.8387 11.2969 17.1613 10.4582 17.4194 9.61952C17.6452 9.65177 17.8387 9.74855 18 9.81306C19.8065 10.4582 21.0645 11.3615 21.0645 12.0711C21.0968 12.8131 19.7742 13.8131 17.8387 14.4582ZM12 13.8453C13 13.8453 13.7742 13.0389 13.7742 12.0711C13.7742 11.1034 12.9677 10.2969 12 10.2969C11.0645 10.2969 10.2258 11.1034 10.2258 12.0711C10.2258 13.0389 11 13.8453 12 13.8453Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:6,
            name:'NextJs FrameWork',
            desc:'I use next.js in the case of projects when the SEO purposes, server-side render gets more important.',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M11.3451 2.4048C11.3021 2.40871 11.1652 2.42239 11.042 2.43216C8.20137 2.68823 5.54056 4.22075 3.85533 6.57623C2.91691 7.88591 2.31672 9.37151 2.08993 10.9451C2.00978 11.4944 2 11.6566 2 12.4014C2 13.1461 2.00978 13.3084 2.08993 13.8577C2.63343 17.6127 5.30597 20.7677 8.93059 21.9366C9.57966 22.1458 10.2639 22.2885 11.042 22.3745C11.3451 22.4077 12.6549 22.4077 12.958 22.3745C14.3011 22.2259 15.4389 21.8936 16.5611 21.3209C16.7331 21.2329 16.7664 21.2095 16.7429 21.1899C16.7273 21.1782 15.9941 20.1949 15.1144 19.0065L13.5152 16.8465L11.5113 13.8811C10.4086 12.2509 9.50147 10.9177 9.49366 10.9177C9.48581 10.9158 9.478 12.2333 9.47409 13.842C9.46822 16.6588 9.46628 16.7722 9.43109 16.8386C9.38025 16.9344 9.34116 16.9735 9.25903 17.0165C9.19647 17.0478 9.14175 17.0537 8.84653 17.0537H8.50831L8.41837 16.997C8.35972 16.9599 8.31672 16.911 8.28738 16.8543L8.24634 16.7663L8.25025 12.847L8.25612 8.92582L8.31672 8.8496C8.348 8.80854 8.41447 8.75576 8.46137 8.73035C8.54153 8.69126 8.57281 8.68735 8.91103 8.68735C9.30987 8.68735 9.37634 8.70298 9.47997 8.81635C9.50928 8.84763 10.5943 10.4818 11.8925 12.4502C13.1906 14.4187 14.9658 17.1064 15.8377 18.4259L17.4213 20.8244L17.5015 20.7716C18.2112 20.3103 18.9619 19.6535 19.5562 18.9693C20.8211 17.5169 21.6364 15.7459 21.9101 13.8577C21.9902 13.3084 22 13.1461 22 12.4014C22 11.6566 21.9902 11.4944 21.9101 10.9451C21.3666 7.19001 18.694 4.03505 15.0694 2.86612C14.4301 2.65891 13.7498 2.51622 12.9873 2.43021C12.7996 2.41066 11.5073 2.38916 11.3451 2.4048ZM15.4389 8.45279C15.5328 8.4997 15.609 8.5896 15.6364 8.68345C15.652 8.73426 15.6559 9.8211 15.652 12.2704L15.6461 15.785L15.0264 14.835L14.4047 13.885V11.3302C14.4047 9.67841 14.4125 8.74991 14.4242 8.70495C14.4555 8.59548 14.5239 8.50948 14.6178 8.45863C14.6979 8.4176 14.7273 8.4137 15.0342 8.4137C15.3236 8.4137 15.3744 8.4176 15.4389 8.45279Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:7,
            name:'TailwindCss',
            desc:'Utilizing each one of these framework to improve the efficiency of user interface styles.',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" clip-rule="evenodd" d="M7.00001 9.96875C7.66657 7.26052 9.33344 5.90625 12 5.90625C16 5.90625 16.5 8.95312 18.5 9.46093C19.8334 9.79958 21 9.29176 22 7.9375C21.3334 10.6457 19.6665 12 17 12C13 12 12.5 8.95312 10.5 8.44531C9.16658 8.10667 8 8.61448 7.00001 9.96875ZM2 16.0625C2.66656 13.3543 4.33343 12 7.00001 12C11 12 11.5 15.0469 13.5 15.5547C14.8334 15.8933 16 15.3855 17 14.0312C16.3334 16.7395 14.6666 18.0937 12 18.0937C8 18.0937 7.50001 15.0469 5.50001 14.5391C4.16656 14.2004 3 14.7082 2 16.0625Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:8,
            name:'Styled-components',
            desc:'styled-components allow us to write css in js and pass prop to elements and deal with them as components',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M11.3451 2.4048C11.3021 2.40871 11.1652 2.42239 11.042 2.43216C8.20137 2.68823 5.54056 4.22075 3.85533 6.57623C2.91691 7.88591 2.31672 9.37151 2.08993 10.9451C2.00978 11.4944 2 11.6566 2 12.4014C2 13.1461 2.00978 13.3084 2.08993 13.8577C2.63343 17.6127 5.30597 20.7677 8.93059 21.9366C9.57966 22.1458 10.2639 22.2885 11.042 22.3745C11.3451 22.4077 12.6549 22.4077 12.958 22.3745C14.3011 22.2259 15.4389 21.8936 16.5611 21.3209C16.7331 21.2329 16.7664 21.2095 16.7429 21.1899C16.7273 21.1782 15.9941 20.1949 15.1144 19.0065L13.5152 16.8465L11.5113 13.8811C10.4086 12.2509 9.50147 10.9177 9.49366 10.9177C9.48581 10.9158 9.478 12.2333 9.47409 13.842C9.46822 16.6588 9.46628 16.7722 9.43109 16.8386C9.38025 16.9344 9.34116 16.9735 9.25903 17.0165C9.19647 17.0478 9.14175 17.0537 8.84653 17.0537H8.50831L8.41837 16.997C8.35972 16.9599 8.31672 16.911 8.28738 16.8543L8.24634 16.7663L8.25025 12.847L8.25612 8.92582L8.31672 8.8496C8.348 8.80854 8.41447 8.75576 8.46137 8.73035C8.54153 8.69126 8.57281 8.68735 8.91103 8.68735C9.30987 8.68735 9.37634 8.70298 9.47997 8.81635C9.50928 8.84763 10.5943 10.4818 11.8925 12.4502C13.1906 14.4187 14.9658 17.1064 15.8377 18.4259L17.4213 20.8244L17.5015 20.7716C18.2112 20.3103 18.9619 19.6535 19.5562 18.9693C20.8211 17.5169 21.6364 15.7459 21.9101 13.8577C21.9902 13.3084 22 13.1461 22 12.4014C22 11.6566 21.9902 11.4944 21.9101 10.9451C21.3666 7.19001 18.694 4.03505 15.0694 2.86612C14.4301 2.65891 13.7498 2.51622 12.9873 2.43021C12.7996 2.41066 11.5073 2.38916 11.3451 2.4048ZM15.4389 8.45279C15.5328 8.4997 15.609 8.5896 15.6364 8.68345C15.652 8.73426 15.6559 9.8211 15.652 12.2704L15.6461 15.785L15.0264 14.835L14.4047 13.885V11.3302C14.4047 9.67841 14.4125 8.74991 14.4242 8.70495C14.4555 8.59548 14.5239 8.50948 14.6178 8.45863C14.6979 8.4176 14.7273 8.4137 15.0342 8.4137C15.3236 8.4137 15.3744 8.4176 15.4389 8.45279Z" fill="#323544"/>
                </svg>)
        },
        {
            id:9,
            name:'npm',
            desc:'Taking advantage of node package manager in react.js / next.js projects to implement famous react libraries. Some of them includes react-select, react',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" >
                <path d="M12 12.5805H10.871V10.3547H12V12.5805ZM22 8.12891V14.7741H12V15.8708H7.54839V14.7418H2V8.12891H22ZM7.54839 9.19342H3.09677V13.645H5.32258V10.3547H6.45161V13.7096H7.58064L7.54839 9.19342ZM13.129 9.19342H8.67742V14.7418H10.9032V13.6128H13.129V9.19342ZM20.871 9.19342H14.2258V13.645H16.4516V10.3547H17.5806V13.7096H18.7097V10.3547H19.8387V13.7096H20.9677V9.19342H20.871Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:10,
            name:'JavaScript',
            desc:'The Programming Language for the Web that can calculate, manipulate and validate data.',
            icon:(<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg" >
                <path d="M3 3V21H21V3H3ZM12.8129 17.0226C12.8129 18.7935 11.7677 19.6065 10.2581 19.6065C8.92258 19.6065 8.13871 18.9097 7.73226 18.0387L9.12581 17.1677C9.35806 17.6613 9.61935 18.0387 10.229 18.0387C10.8097 18.0387 11.129 17.8355 11.129 16.9645V11.2742H12.8129V17.0226ZM16.8194 19.6065C15.2516 19.6065 14.2355 18.8226 13.7129 17.8935L15.1065 17.0806C15.4839 17.6613 15.9774 18.0968 16.7903 18.0968C17.4871 18.0968 17.9226 17.7774 17.9226 17.2258C17.9226 16.6452 17.4871 16.4419 16.7032 16.0935L16.2968 15.9194C15.0774 15.4258 14.2645 14.729 14.2645 13.3355C14.2645 12.0581 15.1935 11.129 16.7323 11.129C17.8065 11.129 18.5613 11.5065 19.1129 12.4935L17.8065 13.3645C17.5161 12.871 17.2258 12.6387 16.7032 12.6387C16.2097 12.6387 15.8903 12.9581 15.8903 13.3645C15.8903 13.8581 16.2097 14.0613 16.9065 14.3806L17.3129 14.5548C18.7355 15.1645 19.5774 15.7742 19.5774 17.2258C19.6065 18.7645 18.4161 19.6065 16.8194 19.6065Z" fill="#323544"/>
                </svg>
                )
        },
        {
            id:11,
            name:'Teaching',
            desc:'tutering both private and grouped class'
        },
        {
            id:12,
            name:'ICDL',
            desc:'I have passes the ICDL course in Mojtameh Fani Enqelab'
        },
        
        
        
        
    ]
    return (
        <div className="bg-gradient-to-r from-[#282f44] to-[#634258]" id="skills">
            <div className="container mx-auto pt-30 pl-5 sm:pl-0">
                <h1 className=" text-center sm:text-5xl text-4xl  font-bold bg-clip-text text-transparent bg-gradient-to-b from-[#9ad1aa] from-40% to-violet-500">Skills & Experinces</h1>
                <div className="flex flex-row flex-wrap justify-center items-center gap-5 mt-10">
                    <div className=" bg-gradient-to-br from-[#282f44] to-[#634258] p-5  md:w-4/12 lg:w-[23%] rounded-md hover:shadow-xl transition flex flex-col justify-center items-center shadow-md w-[90%]"><Image draggable="false" alt="JavaScript" loading="lazy" width="150" height="150" decoding="async" data-nimg="1" className="drop-shadow-md" src={js} style={{color: 'transparent'}}/><h5 className="mt-10 text-gray-300 text-3xl">JavaScript</h5></div>
                    <div className=" bg-gradient-to-br from-[#282f44] to-[#634258] p-5 w-[90%] md:w-4/12 lg:w-[23%] rounded-md hover:shadow-xl transition flex flex-col justify-center items-center shadow-md"><Image draggable="false" alt="React" loading="lazy" width="150" height="150" decoding="async" data-nimg="1" className="drop-shadow-md" src={react} style={{color: 'transparent'}}/><h5 className="mt-10 text-gray-300 text-3xl">React</h5></div>
                    <div className=" bg-gradient-to-br from-[#282f44] to-[#634258] p-5 w-[90%] md:w-4/12 lg:w-[23%] rounded-md hover:shadow-xl transition flex flex-col justify-center items-center shadow-md"><Image draggable="false" alt="NextJs" loading="lazy" width="150" height="150" decoding="async" data-nimg="1" className="drop-shadow-md" src={nextjs} style={{color: 'transparent'}}/><h5 className="mt-10 text-gray-300 text-3xl">NextJs</h5></div>
                    
                    </div>

                <div>
                    <div className="flex justify-evenly lg:flex-row flex-col flex-wrap mt-10">
                        {/*first colum */}
                       <div className="lg:w-1/2 w-full  border-l-2  border-[#9ad1aa] ml-2 sm:ml-0">
                        <ul className="list-none text-white flex lg:flex-row flex-col flex-wrap  lg:justify-between justify-center items-center  ">
                                            { 
                                            skillsData.slice(0, Math.ceil(skillsData.length / 2)).map((data) => (
                                                <li 
                                                key={data.id} 
                                                className="w-[90%] border-2 border-transparent my-6 lg:mx-3 mt-0 lg:h-30 h-40 
                                                           flex justify-center flex-col px-3 relative rounded-md 
                                                           transition-all duration-500 ease-in-out 
                                                           before:content-[''] before:absolute before:top-[-0.4rem] before:w-4 before:h-4 
                                                           before:bg-[#9ad1aa] before:rounded-full before:left-[-1.5rem] sm:-ml-9 md:-ml-13 -ml-5
                                                           bg-gradient-to-br from-[#282f44] to-[#634258] shadow-lg shadow-[#00000055] 
                                                           hover:shadow-2xl 
                                                           hover:scale-105 
                                                           hover:before:bg-white"
                                            >
                                                <h1 className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-b from-[#9ad1aa] from-40% to-violet-500 
                                                               transition-all duration-500 ">
                                                    <span>{data.name}</span>
                                                </h1>
                                                <p className="text-sm text-slate-300 transition-all duration-500 ">{data.desc}</p>
                                            </li>
                                            
                                ))}
                            </ul>
                       </div>
                        {/*second colum */}
                        <div className="lg:w-1/2 w-full  border-l-2  border-[#9ad1aa] ml-2 sm:ml-0">
                        <ul className="list-none text-white flex lg:flex-row flex-col flex-wrap  lg:justify-between justify-center items-center  ">
                                            { 
                                            skillsData.slice( Math.ceil(skillsData.length / 2)).map((data) => (
                                                <li 
                                                key={data.id} 
                                                className="w-[90%] border-2 border-transparent my-6 lg:mx-3 mt-0 lg:h-30 h-40 
                                                           flex justify-center flex-col px-3 relative rounded-md 
                                                           transition-all duration-500 ease-in-out 
                                                           before:content-[''] before:absolute before:top-[-0.4rem] before:w-4 before:h-4 
                                                           before:bg-[#9ad1aa] before:rounded-full before:left-[-1.5rem] sm:-ml-9 md:-ml-13 -ml-5
                                                           bg-gradient-to-br from-[#282f44] to-[#634258] shadow-lg shadow-[#00000055] 
                                                           hover:shadow-2xl 
                                                           hover:scale-105 
                                                           hover:before:bg-white"
                                            >
                                                <h1 className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-b from-[#9ad1aa] from-40% to-violet-500 
                                                               transition-all duration-500 ">
                                                    <span>{data.name}</span>
                                                </h1>
                                                <p className="text-sm text-slate-300 transition-all duration-500 ">{data.desc}</p>
                                            </li>
                                            
                                ))}
                            </ul>
                       </div>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default Skills;